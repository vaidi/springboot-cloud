<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (157 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[deoptimization] (1 samples, 0.64%)</title><rect x="10.0" y="947.0" width="7.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>Deoptimization::unpack_frames(JavaThread*, int) (1 samples, 0.64%)</title><rect x="10.0" y="931.0" width="7.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>DeoptResourceMark::reset_to_mark() (1 samples, 0.64%)</title><rect x="10.0" y="915.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.run (125 samples, 79.62%)</title><rect x="17.5" y="947.0" width="939.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.5" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/FastThreadLocalRunnable.run (1 samples, 0.64%)</title><rect x="17.5" y="931.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.5" y="942.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/internal/ThreadExecutorMap$2.run (1 samples, 0.64%)</title><rect x="17.5" y="915.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.5" y="926.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/SingleThreadEventExecutor$4.run (1 samples, 0.64%)</title><rect x="17.5" y="899.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.5" y="910.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.run (1 samples, 0.64%)</title><rect x="17.5" y="883.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.5" y="894.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.processSelectedKeys (1 samples, 0.64%)</title><rect x="17.5" y="867.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.5" y="878.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (1 samples, 0.64%)</title><rect x="17.5" y="851.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.5" y="862.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.processSelectedKey (1 samples, 0.64%)</title><rect x="17.5" y="835.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.5" y="846.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (1 samples, 0.64%)</title><rect x="17.5" y="819.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.5" y="830.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline.fireChannelRead (1 samples, 0.64%)</title><rect x="17.5" y="803.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.5" y="814.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.64%)</title><rect x="17.5" y="787.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.5" y="798.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.64%)</title><rect x="17.5" y="771.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.5" y="782.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (1 samples, 0.64%)</title><rect x="17.5" y="755.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.5" y="766.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.64%)</title><rect x="17.5" y="739.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.5" y="750.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.64%)</title><rect x="17.5" y="723.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.5" y="734.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.64%)</title><rect x="17.5" y="707.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.5" y="718.0"></text>
</g>
<g>
<title>io/termd/core/telnet/netty/TelnetChannelHandler.channelRead (1 samples, 0.64%)</title><rect x="17.5" y="691.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.5" y="702.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.receive (1 samples, 0.64%)</title><rect x="17.5" y="675.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.5" y="686.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.flushDataIfNecessary (1 samples, 0.64%)</title><rect x="17.5" y="659.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.5" y="670.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.flushData (1 samples, 0.64%)</title><rect x="17.5" y="643.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.5" y="654.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection.onData (1 samples, 0.64%)</title><rect x="17.5" y="627.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.5" y="638.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryDecoder.write (1 samples, 0.64%)</title><rect x="17.5" y="611.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.5" y="622.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryDecoder.write (1 samples, 0.64%)</title><rect x="17.5" y="595.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.5" y="606.0"></text>
</g>
<g>
<title>io/termd/core/tty/ReadBuffer.accept (1 samples, 0.64%)</title><rect x="17.5" y="579.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.5" y="590.0"></text>
</g>
<g>
<title>io/termd/core/tty/ReadBuffer.accept (1 samples, 0.64%)</title><rect x="17.5" y="563.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.5" y="574.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyEventDecoder.accept (1 samples, 0.64%)</title><rect x="17.5" y="547.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.5" y="558.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyEventDecoder.accept (1 samples, 0.64%)</title><rect x="17.5" y="531.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.5" y="542.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction$2.accept (1 samples, 0.64%)</title><rect x="17.5" y="515.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.5" y="526.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction$2.accept (1 samples, 0.64%)</title><rect x="17.5" y="499.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.5" y="510.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline.access$500 (1 samples, 0.64%)</title><rect x="17.5" y="483.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.5" y="494.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline.deliver (1 samples, 0.64%)</title><rect x="17.5" y="467.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.5" y="478.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.access$200 (1 samples, 0.64%)</title><rect x="17.5" y="451.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.5" y="462.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.handle (1 samples, 0.64%)</title><rect x="17.5" y="435.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.5" y="446.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.refresh (1 samples, 0.64%)</title><rect x="17.5" y="419.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.5" y="430.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.refresh (1 samples, 0.64%)</title><rect x="17.5" y="403.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.5" y="414.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.accept (1 samples, 0.64%)</title><rect x="17.5" y="387.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.5" y="398.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.accept (1 samples, 0.64%)</title><rect x="17.5" y="371.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.5" y="382.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyOutputMode.sendChunk (1 samples, 0.64%)</title><rect x="17.5" y="355.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.5" y="366.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryEncoder.accept (1 samples, 0.64%)</title><rect x="17.5" y="339.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.5" y="350.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryEncoder.accept (1 samples, 0.64%)</title><rect x="17.5" y="323.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.5" y="334.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection$2.accept (1 samples, 0.64%)</title><rect x="17.5" y="307.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.5" y="318.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection$2.accept (1 samples, 0.64%)</title><rect x="17.5" y="291.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.5" y="302.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.write (1 samples, 0.64%)</title><rect x="17.5" y="275.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.5" y="286.0"></text>
</g>
<g>
<title>io/termd/core/telnet/netty/NettyTelnetConnection.send (1 samples, 0.64%)</title><rect x="17.5" y="259.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.5" y="270.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.64%)</title><rect x="17.5" y="243.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.5" y="254.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.64%)</title><rect x="17.5" y="227.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.5" y="238.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.64%)</title><rect x="17.5" y="211.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.5" y="222.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (1 samples, 0.64%)</title><rect x="17.5" y="195.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.5" y="206.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (1 samples, 0.64%)</title><rect x="17.5" y="179.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.5" y="190.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline$HeadContext.flush (1 samples, 0.64%)</title><rect x="17.5" y="163.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.5" y="174.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.flush (1 samples, 0.64%)</title><rect x="17.5" y="147.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.5" y="158.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (1 samples, 0.64%)</title><rect x="17.5" y="131.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.5" y="142.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (1 samples, 0.64%)</title><rect x="17.5" y="115.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.5" y="126.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/socket/nio/NioSocketChannel.doWrite (1 samples, 0.64%)</title><rect x="17.5" y="99.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.5" y="110.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/ChannelOutboundBuffer.removeBytes (1 samples, 0.64%)</title><rect x="17.5" y="83.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.5" y="94.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/ChannelOutboundBuffer.clearNioBuffers (1 samples, 0.64%)</title><rect x="17.5" y="67.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.64%)</title><rect x="17.5" y="51.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.5" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.rangeCheck (1 samples, 0.64%)</title><rect x="17.5" y="35.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.5" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.64%)</title><rect x="25.0" y="931.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.64%)</title><rect x="25.0" y="915.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (1 samples, 0.64%)</title><rect x="25.0" y="899.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201 (1 samples, 0.64%)</title><rect x="25.0" y="883.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.64%)</title><rect x="25.0" y="867.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run$$$capture (1 samples, 0.64%)</title><rect x="25.0" y="851.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.64%)</title><rect x="25.0" y="835.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.0" y="846.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl$CommandProcessTask.run (1 samples, 0.64%)</title><rect x="25.0" y="819.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.0" y="830.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (1 samples, 0.64%)</title><rect x="25.0" y="803.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.0" y="814.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (1 samples, 0.64%)</title><rect x="25.0" y="787.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.0" y="798.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.access$100 (1 samples, 0.64%)</title><rect x="25.0" y="771.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.0" y="782.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.process (1 samples, 0.64%)</title><rect x="25.0" y="755.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.0" y="766.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.process (1 samples, 0.64%)</title><rect x="25.0" y="739.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.0" y="750.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.execute (1 samples, 0.64%)</title><rect x="25.0" y="723.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.0" y="734.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute (1 samples, 0.64%)</title><rect x="25.0" y="707.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.0" y="718.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute0 (1 samples, 0.64%)</title><rect x="25.0" y="691.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.0" y="702.0"></text>
</g>
<g>
<title>Java_one_profiler_AsyncProfiler_execute0 (1 samples, 0.64%)</title><rect x="25.0" y="675.0" width="7.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="28.0" y="686.0"></text>
</g>
<g>
<title>Profiler::runInternal(Arguments&amp;, std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) (1 samples, 0.64%)</title><rect x="25.0" y="659.0" width="7.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="28.0" y="670.0"></text>
</g>
<g>
<title>Profiler::start(Arguments&amp;, bool) (1 samples, 0.64%)</title><rect x="25.0" y="643.0" width="7.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="28.0" y="654.0"></text>
</g>
<g>
<title>Profiler::bindNativeLibraryLoad(JNIEnv_*, unsigned char (*)(JNIEnv_*, _jobject*, _jstring*, unsigned char)) (1 samples, 0.64%)</title><rect x="25.0" y="627.0" width="7.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="28.0" y="638.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.64%)</title><rect x="25.0" y="611.0" width="7.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="28.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.64%)</title><rect x="25.0" y="595.0" width="7.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="28.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.64%)</title><rect x="25.0" y="579.0" width="7.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="28.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.64%)</title><rect x="25.0" y="563.0" width="7.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="28.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.64%)</title><rect x="25.0" y="547.0" width="7.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="28.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.64%)</title><rect x="25.0" y="531.0" width="7.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="28.0" y="542.0"></text>
</g>
<g>
<title>org/apache/catalina/core/ContainerBase$ContainerBackgroundProcessor.run (1 samples, 0.64%)</title><rect x="32.5" y="931.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.5" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (1 samples, 0.64%)</title><rect x="32.5" y="915.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.5" y="926.0"></text>
</g>
<g>
<title>JVM_Sleep (1 samples, 0.64%)</title><rect x="32.5" y="899.0" width="7.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="35.5" y="910.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (1 samples, 0.64%)</title><rect x="32.5" y="883.0" width="7.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="35.5" y="894.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.64%)</title><rect x="32.5" y="867.0" width="7.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="35.5" y="878.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.64%)</title><rect x="32.5" y="851.0" width="7.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="35.5" y="862.0"></text>
</g>
<g>
<title>org/apache/http/impl/nio/client/CloseableHttpAsyncClientBase$1.run (1 samples, 0.64%)</title><rect x="40.1" y="931.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.1" y="942.0"></text>
</g>
<g>
<title>org/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager.execute (1 samples, 0.64%)</title><rect x="40.1" y="915.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.1" y="926.0"></text>
</g>
<g>
<title>org/apache/http/impl/nio/reactor/AbstractMultiworkerIOReactor.execute (1 samples, 0.64%)</title><rect x="40.1" y="899.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1 samples, 0.64%)</title><rect x="40.1" y="883.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.1" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.64%)</title><rect x="40.1" y="867.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.1" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1 samples, 0.64%)</title><rect x="40.1" y="851.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.poll (1 samples, 0.64%)</title><rect x="40.1" y="835.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.kevent0 (1 samples, 0.64%)</title><rect x="40.1" y="819.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.1" y="830.0"></text>
</g>
<g>
<title>kevent (1 samples, 0.64%)</title><rect x="40.1" y="803.0" width="7.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="43.1" y="814.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSystemWatcher$Watcher.run (121 samples, 77.07%)</title><rect x="47.6" y="931.0" width="909.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.6" y="942.0">org/springframework/boot/devtools/filewatch/FileSystemWatcher$Watcher.run</text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSystemWatcher$Watcher.scan (121 samples, 77.07%)</title><rect x="47.6" y="915.0" width="909.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.6" y="926.0">org/springframework/boot/devtools/filewatch/FileSystemWatcher$Watcher.scan</text>
</g>
<g>
<title>java/lang/Thread.sleep (10 samples, 6.37%)</title><rect x="55.1" y="899.0" width="75.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.1" y="910.0">java/lan..</text>
</g>
<g>
<title>JVM_Sleep (9 samples, 5.73%)</title><rect x="55.1" y="883.0" width="67.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="58.1" y="894.0">JVM_Sleep</text>
</g>
<g>
<title>JavaThreadSleepState::JavaThreadSleepState(JavaThread*) (1 samples, 0.64%)</title><rect x="55.1" y="867.0" width="7.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="58.1" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.64%)</title><rect x="62.6" y="867.0" width="7.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="65.6" y="878.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (7 samples, 4.46%)</title><rect x="70.1" y="867.0" width="52.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="73.1" y="878.0">os::s..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (7 samples, 4.46%)</title><rect x="70.1" y="851.0" width="52.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="73.1" y="862.0">os::P..</text>
</g>
<g>
<title>__psynch_cvwait (7 samples, 4.46%)</title><rect x="70.1" y="835.0" width="52.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="73.1" y="846.0">__psy..</text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.64%)</title><rect x="122.7" y="883.0" width="7.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="125.7" y="894.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSystemWatcher$Watcher.getCurrentSnapshots (105 samples, 66.88%)</title><rect x="130.3" y="899.0" width="789.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.3" y="910.0">org/springframework/boot/devtools/filewatch/FileSystemWatcher$Watcher.getCurrentSnapshots</text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.&lt;init&gt; (105 samples, 66.88%)</title><rect x="130.3" y="883.0" width="789.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.3" y="894.0">org/springframework/boot/devtools/filewatch/FolderSnapshot.&lt;init&gt;</text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles (105 samples, 66.88%)</title><rect x="130.3" y="867.0" width="789.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.3" y="878.0">org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles</text>
</g>
<g>
<title>java/io/File.isDirectory (1 samples, 0.64%)</title><rect x="130.3" y="851.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.3" y="862.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.64%)</title><rect x="130.3" y="835.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.3" y="846.0"></text>
</g>
<g>
<title>java/io/File.getName (1 samples, 0.64%)</title><rect x="130.3" y="819.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.64%)</title><rect x="130.3" y="803.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.3" y="814.0"></text>
</g>
<g>
<title>java/io/File.isFile (1 samples, 0.64%)</title><rect x="137.8" y="851.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.8" y="862.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.64%)</title><rect x="137.8" y="835.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.8" y="846.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.64%)</title><rect x="137.8" y="819.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.8" y="830.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.64%)</title><rect x="137.8" y="803.0" width="7.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="140.8" y="814.0"></text>
</g>
<g>
<title>java/io/File.listFiles (25 samples, 15.92%)</title><rect x="145.3" y="851.0" width="187.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.3" y="862.0">java/io/File.listFiles</text>
</g>
<g>
<title>java/io/File.&lt;init&gt; (1 samples, 0.64%)</title><rect x="152.8" y="835.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.8" y="846.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.resolve (1 samples, 0.64%)</title><rect x="152.8" y="819.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.64%)</title><rect x="152.8" y="803.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.8" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.64%)</title><rect x="152.8" y="787.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.64%)</title><rect x="152.8" y="771.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.8" y="782.0"></text>
</g>
<g>
<title>java/io/File.list (23 samples, 14.65%)</title><rect x="160.3" y="835.0" width="172.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.3" y="846.0">java/io/File.list</text>
</g>
<g>
<title>java/io/UnixFileSystem.list (23 samples, 14.65%)</title><rect x="160.3" y="819.0" width="172.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.3" y="830.0">java/io/UnixFileSystem..</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_list (22 samples, 14.01%)</title><rect x="160.3" y="803.0" width="165.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="163.3" y="814.0">Java_java_io_UnixFile..</text>
</g>
<g>
<title>_CFRelease (1 samples, 0.64%)</title><rect x="160.3" y="787.0" width="7.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="163.3" y="798.0"></text>
</g>
<g>
<title>__opendir2$INODE64 (1 samples, 0.64%)</title><rect x="167.8" y="787.0" width="7.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="170.8" y="798.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.64%)</title><rect x="167.8" y="771.0" width="7.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="170.8" y="782.0"></text>
</g>
<g>
<title>newStringPlatform (6 samples, 3.82%)</title><rect x="175.4" y="787.0" width="45.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="178.4" y="798.0">newS..</text>
</g>
<g>
<title>CFStringCreateMutable (2 samples, 1.27%)</title><rect x="175.4" y="771.0" width="15.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="178.4" y="782.0"></text>
</g>
<g>
<title>_CFRuntimeCreateInstance (2 samples, 1.27%)</title><rect x="175.4" y="755.0" width="15.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="178.4" y="766.0"></text>
</g>
<g>
<title>object_setClass (1 samples, 0.64%)</title><rect x="182.9" y="739.0" width="7.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="185.9" y="750.0"></text>
</g>
<g>
<title>_CFRelease (1 samples, 0.64%)</title><rect x="190.4" y="771.0" width="7.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="193.4" y="782.0"></text>
</g>
<g>
<title>free (1 samples, 0.64%)</title><rect x="190.4" y="755.0" width="7.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="193.4" y="766.0"></text>
</g>
<g>
<title>__CFStringAppendBytes (2 samples, 1.27%)</title><rect x="197.9" y="771.0" width="15.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="200.9" y="782.0"></text>
</g>
<g>
<title>__CFStringChangeSizeMultiple (2 samples, 1.27%)</title><rect x="197.9" y="755.0" width="15.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="200.9" y="766.0"></text>
</g>
<g>
<title>__CFStrAllocateMutableContents (1 samples, 0.64%)</title><rect x="205.4" y="739.0" width="7.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="208.4" y="750.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.64%)</title><rect x="205.4" y="723.0" width="7.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="208.4" y="734.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.64%)</title><rect x="205.4" y="707.0" width="7.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="208.4" y="718.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (1 samples, 0.64%)</title><rect x="205.4" y="691.0" width="7.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="208.4" y="702.0"></text>
</g>
<g>
<title>tiny_malloc_from_free_list (1 samples, 0.64%)</title><rect x="205.4" y="675.0" width="7.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="208.4" y="686.0"></text>
</g>
<g>
<title>jni_NewString (1 samples, 0.64%)</title><rect x="212.9" y="771.0" width="7.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="215.9" y="782.0"></text>
</g>
<g>
<title>java_lang_String::create_oop_from_unicode(unsigned short*, int, Thread*) (1 samples, 0.64%)</title><rect x="212.9" y="755.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="215.9" y="766.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (1 samples, 0.64%)</title><rect x="212.9" y="739.0" width="7.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="215.9" y="750.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, Thread*) (1 samples, 0.64%)</title><rect x="212.9" y="723.0" width="7.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="215.9" y="734.0"></text>
</g>
<g>
<title>readdir_r$INODE64 (9 samples, 5.73%)</title><rect x="220.4" y="787.0" width="67.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="223.4" y="798.0">readdir..</text>
</g>
<g>
<title>rcmd_af.canonnamebuf (9 samples, 5.73%)</title><rect x="220.4" y="771.0" width="67.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="223.4" y="782.0">rcmd_af..</text>
</g>
<g>
<title>rpc_errlist (5 samples, 3.18%)</title><rect x="288.1" y="787.0" width="37.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="291.1" y="798.0">rpc..</text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.64%)</title><rect x="325.7" y="803.0" width="7.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="328.7" y="814.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSnapshot.&lt;init&gt; (1 samples, 0.64%)</title><rect x="333.2" y="851.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.2" y="862.0"></text>
</g>
<g>
<title>java/io/File.exists (1 samples, 0.64%)</title><rect x="333.2" y="835.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.2" y="846.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.64%)</title><rect x="333.2" y="819.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.2" y="830.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.64%)</title><rect x="333.2" y="803.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.64%)</title><rect x="333.2" y="787.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.64%)</title><rect x="333.2" y="771.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="336.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.deref (1 samples, 0.64%)</title><rect x="333.2" y="755.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="336.2" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.64%)</title><rect x="333.2" y="739.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.64%)</title><rect x="333.2" y="723.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.2" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.64%)</title><rect x="333.2" y="707.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="336.2" y="718.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles (77 samples, 49.04%)</title><rect x="340.7" y="851.0" width="578.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.7" y="862.0">org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles</text>
</g>
<g>
<title>java/io/File.isDirectory (1 samples, 0.64%)</title><rect x="340.7" y="835.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.7" y="846.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.64%)</title><rect x="340.7" y="819.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.7" y="830.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.64%)</title><rect x="340.7" y="803.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="343.7" y="814.0"></text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_getBooleanAttributes0 (1 samples, 0.64%)</title><rect x="340.7" y="787.0" width="7.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="343.7" y="798.0"></text>
</g>
<g>
<title>JNU_GetStringPlatformChars (1 samples, 0.64%)</title><rect x="340.7" y="771.0" width="7.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="343.7" y="782.0"></text>
</g>
<g>
<title>jni_CallObjectMethod (1 samples, 0.64%)</title><rect x="340.7" y="755.0" width="7.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="343.7" y="766.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.64%)</title><rect x="340.7" y="739.0" width="7.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="343.7" y="750.0"></text>
</g>
<g>
<title>Method::is_empty_method() const (1 samples, 0.64%)</title><rect x="340.7" y="723.0" width="7.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="343.7" y="734.0"></text>
</g>
<g>
<title>java/io/File.listFiles (4 samples, 2.55%)</title><rect x="348.2" y="835.0" width="30.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.2" y="846.0">ja..</text>
</g>
<g>
<title>java/io/File.list (4 samples, 2.55%)</title><rect x="348.2" y="819.0" width="30.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.2" y="830.0">ja..</text>
</g>
<g>
<title>java/io/UnixFileSystem.list (4 samples, 2.55%)</title><rect x="348.2" y="803.0" width="30.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.2" y="814.0">ja..</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_list (4 samples, 2.55%)</title><rect x="348.2" y="787.0" width="30.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="351.2" y="798.0">Ja..</text>
</g>
<g>
<title>readdir_r$INODE64 (3 samples, 1.91%)</title><rect x="348.2" y="771.0" width="22.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="351.2" y="782.0">r..</text>
</g>
<g>
<title>rcmd_af.canonnamebuf (3 samples, 1.91%)</title><rect x="348.2" y="755.0" width="22.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="351.2" y="766.0">r..</text>
</g>
<g>
<title>rpc_errlist (1 samples, 0.64%)</title><rect x="370.8" y="771.0" width="7.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="373.8" y="782.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles (72 samples, 45.86%)</title><rect x="378.3" y="835.0" width="541.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.3" y="846.0">org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles</text>
</g>
<g>
<title>java/io/File.isDirectory (6 samples, 3.82%)</title><rect x="378.3" y="819.0" width="45.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.3" y="830.0">java..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (6 samples, 3.82%)</title><rect x="378.3" y="803.0" width="45.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="381.3" y="814.0">java..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (6 samples, 3.82%)</title><rect x="378.3" y="787.0" width="45.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.3" y="798.0">java..</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_getBooleanAttributes0 (1 samples, 0.64%)</title><rect x="378.3" y="771.0" width="7.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="381.3" y="782.0"></text>
</g>
<g>
<title>JNU_GetStringPlatformChars (1 samples, 0.64%)</title><rect x="378.3" y="755.0" width="7.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="381.3" y="766.0"></text>
</g>
<g>
<title>jni_CallObjectMethod (1 samples, 0.64%)</title><rect x="378.3" y="739.0" width="7.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="381.3" y="750.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.64%)</title><rect x="378.3" y="723.0" width="7.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="381.3" y="734.0"></text>
</g>
<g>
<title>Fingerprinter::Fingerprinter(methodHandle) (1 samples, 0.64%)</title><rect x="378.3" y="707.0" width="7.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="381.3" y="718.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (5 samples, 3.18%)</title><rect x="385.8" y="771.0" width="37.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="388.8" y="782.0">rcm..</text>
</g>
<g>
<title>java/io/File.isFile (3 samples, 1.91%)</title><rect x="423.4" y="819.0" width="22.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.4" y="830.0">j..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (3 samples, 1.91%)</title><rect x="423.4" y="803.0" width="22.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.4" y="814.0">j..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (3 samples, 1.91%)</title><rect x="423.4" y="787.0" width="22.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.4" y="798.0">j..</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_getBooleanAttributes0 (1 samples, 0.64%)</title><rect x="423.4" y="771.0" width="7.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="426.4" y="782.0"></text>
</g>
<g>
<title>free (1 samples, 0.64%)</title><rect x="423.4" y="755.0" width="7.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="426.4" y="766.0"></text>
</g>
<g>
<title>szone_size (1 samples, 0.64%)</title><rect x="423.4" y="739.0" width="7.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="426.4" y="750.0"></text>
</g>
<g>
<title>tiny_size (1 samples, 0.64%)</title><rect x="423.4" y="723.0" width="7.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="426.4" y="734.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 1.27%)</title><rect x="430.9" y="771.0" width="15.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="433.9" y="782.0"></text>
</g>
<g>
<title>java/io/File.listFiles (10 samples, 6.37%)</title><rect x="445.9" y="819.0" width="75.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.9" y="830.0">java/io/..</text>
</g>
<g>
<title>java/io/File.&lt;init&gt; (1 samples, 0.64%)</title><rect x="453.4" y="803.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.4" y="814.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.resolve (1 samples, 0.64%)</title><rect x="453.4" y="787.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.64%)</title><rect x="453.4" y="771.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.64%)</title><rect x="453.4" y="755.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.4" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.64%)</title><rect x="453.4" y="739.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.64%)</title><rect x="453.4" y="723.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.4" y="734.0"></text>
</g>
<g>
<title>java/io/File.list (8 samples, 5.10%)</title><rect x="461.0" y="803.0" width="60.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.0" y="814.0">java/i..</text>
</g>
<g>
<title>java/io/UnixFileSystem.list (8 samples, 5.10%)</title><rect x="461.0" y="787.0" width="60.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.0" y="798.0">java/i..</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_list (8 samples, 5.10%)</title><rect x="461.0" y="771.0" width="60.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="464.0" y="782.0">Java_j..</text>
</g>
<g>
<title>newStringPlatform (1 samples, 0.64%)</title><rect x="461.0" y="755.0" width="7.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="464.0" y="766.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.64%)</title><rect x="461.0" y="739.0" width="7.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="464.0" y="750.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.64%)</title><rect x="461.0" y="723.0" width="7.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="464.0" y="734.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.64%)</title><rect x="461.0" y="707.0" width="7.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="464.0" y="718.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (1 samples, 0.64%)</title><rect x="461.0" y="691.0" width="7.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="464.0" y="702.0"></text>
</g>
<g>
<title>readdir_r$INODE64 (2 samples, 1.27%)</title><rect x="468.5" y="755.0" width="15.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="471.5" y="766.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 1.27%)</title><rect x="468.5" y="739.0" width="15.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="471.5" y="750.0"></text>
</g>
<g>
<title>rpc_errlist (5 samples, 3.18%)</title><rect x="483.5" y="755.0" width="37.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="486.5" y="766.0">rpc..</text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSnapshot.&lt;init&gt; (22 samples, 14.01%)</title><rect x="521.1" y="819.0" width="165.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.1" y="830.0">org/springframework/b..</text>
</g>
<g>
<title>java/io/File.exists (10 samples, 6.37%)</title><rect x="521.1" y="803.0" width="75.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.1" y="814.0">java/io/..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (10 samples, 6.37%)</title><rect x="521.1" y="787.0" width="75.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.1" y="798.0">java/io/..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (10 samples, 6.37%)</title><rect x="521.1" y="771.0" width="75.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.1" y="782.0">java/io/..</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_getBooleanAttributes0 (1 samples, 0.64%)</title><rect x="521.1" y="755.0" width="7.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="524.1" y="766.0"></text>
</g>
<g>
<title>JNU_GetStringPlatformChars (1 samples, 0.64%)</title><rect x="521.1" y="739.0" width="7.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="524.1" y="750.0"></text>
</g>
<g>
<title>jni_CallObjectMethod (1 samples, 0.64%)</title><rect x="521.1" y="723.0" width="7.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="524.1" y="734.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.64%)</title><rect x="521.1" y="707.0" width="7.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="524.1" y="718.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) (1 samples, 0.64%)</title><rect x="521.1" y="691.0" width="7.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="524.1" y="702.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (9 samples, 5.73%)</title><rect x="528.6" y="755.0" width="67.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="531.6" y="766.0">rcmd_af..</text>
</g>
<g>
<title>java/io/File.isFile (5 samples, 3.18%)</title><rect x="596.2" y="803.0" width="37.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.2" y="814.0">jav..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (5 samples, 3.18%)</title><rect x="596.2" y="787.0" width="37.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.2" y="798.0">jav..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (5 samples, 3.18%)</title><rect x="596.2" y="771.0" width="37.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.2" y="782.0">jav..</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_getBooleanAttributes0 (2 samples, 1.27%)</title><rect x="596.2" y="755.0" width="15.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="599.2" y="766.0"></text>
</g>
<g>
<title>JNU_GetStringPlatformChars (2 samples, 1.27%)</title><rect x="596.2" y="739.0" width="15.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="599.2" y="750.0"></text>
</g>
<g>
<title>jni_CallObjectMethod (2 samples, 1.27%)</title><rect x="596.2" y="723.0" width="15.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="599.2" y="734.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 1.27%)</title><rect x="596.2" y="707.0" width="15.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="599.2" y="718.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::remove_at(int) (1 samples, 0.64%)</title><rect x="596.2" y="691.0" width="7.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="599.2" y="702.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) (1 samples, 0.64%)</title><rect x="603.8" y="691.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="606.8" y="702.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (3 samples, 1.91%)</title><rect x="611.3" y="755.0" width="22.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="614.3" y="766.0">r..</text>
</g>
<g>
<title>java/io/File.lastModified (3 samples, 1.91%)</title><rect x="633.8" y="803.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.8" y="814.0">j..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getLastModifiedTime (3 samples, 1.91%)</title><rect x="633.8" y="787.0" width="22.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.8" y="798.0">j..</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_getLastModifiedTime (1 samples, 0.64%)</title><rect x="633.8" y="771.0" width="7.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="636.8" y="782.0"></text>
</g>
<g>
<title>JNU_GetStringPlatformChars (1 samples, 0.64%)</title><rect x="633.8" y="755.0" width="7.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="636.8" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.64%)</title><rect x="633.8" y="739.0" width="7.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="636.8" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.64%)</title><rect x="633.8" y="723.0" width="7.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="636.8" y="734.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 1.27%)</title><rect x="641.3" y="771.0" width="15.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="644.3" y="782.0"></text>
</g>
<g>
<title>java/io/File.length (4 samples, 2.55%)</title><rect x="656.4" y="803.0" width="30.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.4" y="814.0">ja..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getLength (4 samples, 2.55%)</title><rect x="656.4" y="787.0" width="30.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.4" y="798.0">ja..</text>
</g>
<g>
<title>rcmd_af.canonnamebuf (4 samples, 2.55%)</title><rect x="656.4" y="771.0" width="30.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="659.4" y="782.0">rc..</text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles (31 samples, 19.75%)</title><rect x="686.4" y="819.0" width="233.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.4" y="830.0">org/springframework/boot/devtoo..</text>
</g>
<g>
<title>java/io/File.isDirectory (6 samples, 3.82%)</title><rect x="686.4" y="803.0" width="45.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.4" y="814.0">java..</text>
</g>
<g>
<title>java/io/File.isInvalid (1 samples, 0.64%)</title><rect x="686.4" y="787.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.4" y="798.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (5 samples, 3.18%)</title><rect x="693.9" y="787.0" width="37.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.9" y="798.0">jav..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (5 samples, 3.18%)</title><rect x="693.9" y="771.0" width="37.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.9" y="782.0">jav..</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_getBooleanAttributes0 (1 samples, 0.64%)</title><rect x="693.9" y="755.0" width="7.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="696.9" y="766.0"></text>
</g>
<g>
<title>JNU_GetStringPlatformChars (1 samples, 0.64%)</title><rect x="693.9" y="739.0" width="7.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="696.9" y="750.0"></text>
</g>
<g>
<title>jni_CallObjectMethod (1 samples, 0.64%)</title><rect x="693.9" y="723.0" width="7.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="696.9" y="734.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.64%)</title><rect x="693.9" y="707.0" width="7.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="696.9" y="718.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) (1 samples, 0.64%)</title><rect x="693.9" y="691.0" width="7.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="696.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.64%)</title><rect x="701.5" y="755.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.64%)</title><rect x="701.5" y="739.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="704.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.64%)</title><rect x="701.5" y="723.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encode (1 samples, 0.64%)</title><rect x="701.5" y="707.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="704.5" y="718.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (3 samples, 1.91%)</title><rect x="709.0" y="755.0" width="22.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="712.0" y="766.0">r..</text>
</g>
<g>
<title>java/io/File.isFile (3 samples, 1.91%)</title><rect x="731.5" y="803.0" width="22.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.5" y="814.0">j..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (3 samples, 1.91%)</title><rect x="731.5" y="787.0" width="22.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.5" y="798.0">j..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (3 samples, 1.91%)</title><rect x="731.5" y="771.0" width="22.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.5" y="782.0">j..</text>
</g>
<g>
<title>rcmd_af.canonnamebuf (3 samples, 1.91%)</title><rect x="731.5" y="755.0" width="22.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="734.5" y="766.0">r..</text>
</g>
<g>
<title>java/io/File.listFiles (7 samples, 4.46%)</title><rect x="754.1" y="803.0" width="52.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.1" y="814.0">java/..</text>
</g>
<g>
<title>java/io/File.list (7 samples, 4.46%)</title><rect x="754.1" y="787.0" width="52.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.1" y="798.0">java/..</text>
</g>
<g>
<title>java/io/UnixFileSystem.list (7 samples, 4.46%)</title><rect x="754.1" y="771.0" width="52.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.1" y="782.0">java/..</text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_list (5 samples, 3.18%)</title><rect x="754.1" y="755.0" width="37.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="757.1" y="766.0">Jav..</text>
</g>
<g>
<title>newStringPlatform (2 samples, 1.27%)</title><rect x="754.1" y="739.0" width="15.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="757.1" y="750.0"></text>
</g>
<g>
<title>CFStringCreateMutable (1 samples, 0.64%)</title><rect x="754.1" y="723.0" width="7.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="757.1" y="734.0"></text>
</g>
<g>
<title>_CFRuntimeCreateInstance (1 samples, 0.64%)</title><rect x="754.1" y="707.0" width="7.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="757.1" y="718.0"></text>
</g>
<g>
<title>__CFAllocatorSystemAllocate (1 samples, 0.64%)</title><rect x="754.1" y="691.0" width="7.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="757.1" y="702.0"></text>
</g>
<g>
<title>_CFRelease (1 samples, 0.64%)</title><rect x="761.6" y="723.0" width="7.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="764.6" y="734.0"></text>
</g>
<g>
<title>__CFStringDeallocate (1 samples, 0.64%)</title><rect x="761.6" y="707.0" width="7.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="764.6" y="718.0"></text>
</g>
<g>
<title>free_tiny (1 samples, 0.64%)</title><rect x="761.6" y="691.0" width="7.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="764.6" y="702.0"></text>
</g>
<g>
<title>tiny_free_no_lock (1 samples, 0.64%)</title><rect x="761.6" y="675.0" width="7.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="764.6" y="686.0"></text>
</g>
<g>
<title>tiny_free_list_add_ptr (1 samples, 0.64%)</title><rect x="761.6" y="659.0" width="7.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="764.6" y="670.0"></text>
</g>
<g>
<title>rpc_errlist (3 samples, 1.91%)</title><rect x="769.1" y="739.0" width="22.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="772.1" y="750.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.64%)</title><rect x="791.7" y="755.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="794.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.64%)</title><rect x="791.7" y="739.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.64%)</title><rect x="791.7" y="723.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encode (1 samples, 0.64%)</title><rect x="791.7" y="707.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.7" y="718.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.64%)</title><rect x="799.2" y="755.0" width="7.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="802.2" y="766.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSnapshot.&lt;init&gt; (11 samples, 7.01%)</title><rect x="806.7" y="803.0" width="82.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="809.7" y="814.0">org/sprin..</text>
</g>
<g>
<title>java/io/File.exists (2 samples, 1.27%)</title><rect x="806.7" y="787.0" width="15.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.7" y="798.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (2 samples, 1.27%)</title><rect x="806.7" y="771.0" width="15.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.7" y="782.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (2 samples, 1.27%)</title><rect x="806.7" y="755.0" width="15.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.7" y="766.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 1.27%)</title><rect x="806.7" y="739.0" width="15.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="809.7" y="750.0"></text>
</g>
<g>
<title>java/io/File.isFile (1 samples, 0.64%)</title><rect x="821.7" y="787.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.7" y="798.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.64%)</title><rect x="821.7" y="771.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.7" y="782.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.64%)</title><rect x="821.7" y="755.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.7" y="766.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.64%)</title><rect x="821.7" y="739.0" width="7.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="824.7" y="750.0"></text>
</g>
<g>
<title>java/io/File.lastModified (7 samples, 4.46%)</title><rect x="829.2" y="787.0" width="52.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.2" y="798.0">java/..</text>
</g>
<g>
<title>java/io/UnixFileSystem.getLastModifiedTime (7 samples, 4.46%)</title><rect x="829.2" y="771.0" width="52.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.2" y="782.0">java/..</text>
</g>
<g>
<title>rcmd_af.canonnamebuf (7 samples, 4.46%)</title><rect x="829.2" y="755.0" width="52.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="832.2" y="766.0">rcmd_..</text>
</g>
<g>
<title>java/io/File.length (1 samples, 0.64%)</title><rect x="881.8" y="787.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.8" y="798.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getLength (1 samples, 0.64%)</title><rect x="881.8" y="771.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.8" y="782.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.64%)</title><rect x="881.8" y="755.0" width="7.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="884.8" y="766.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.collectFiles (4 samples, 2.55%)</title><rect x="889.4" y="803.0" width="30.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.4" y="814.0">or..</text>
</g>
<g>
<title>java/io/File.isDirectory (1 samples, 0.64%)</title><rect x="889.4" y="787.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="892.4" y="798.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.64%)</title><rect x="889.4" y="771.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.4" y="782.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.64%)</title><rect x="889.4" y="755.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="892.4" y="766.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.64%)</title><rect x="889.4" y="739.0" width="7.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="892.4" y="750.0"></text>
</g>
<g>
<title>java/io/File.listFiles (1 samples, 0.64%)</title><rect x="896.9" y="787.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.9" y="798.0"></text>
</g>
<g>
<title>java/io/File.list (1 samples, 0.64%)</title><rect x="896.9" y="771.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.9" y="782.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.list (1 samples, 0.64%)</title><rect x="896.9" y="755.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.9" y="766.0"></text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_list (1 samples, 0.64%)</title><rect x="896.9" y="739.0" width="7.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="899.9" y="750.0"></text>
</g>
<g>
<title>rpc_errlist (1 samples, 0.64%)</title><rect x="896.9" y="723.0" width="7.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="899.9" y="734.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSnapshot.&lt;init&gt; (2 samples, 1.27%)</title><rect x="904.4" y="787.0" width="15.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.4" y="798.0"></text>
</g>
<g>
<title>java/io/File.length (2 samples, 1.27%)</title><rect x="904.4" y="771.0" width="15.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.4" y="782.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getLength (2 samples, 1.27%)</title><rect x="904.4" y="755.0" width="15.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.4" y="766.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 1.27%)</title><rect x="904.4" y="739.0" width="15.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="907.4" y="750.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSystemWatcher$Watcher.isDifferent (5 samples, 3.18%)</title><rect x="919.4" y="899.0" width="37.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="922.4" y="910.0">org..</text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FolderSnapshot.equals (5 samples, 3.18%)</title><rect x="919.4" y="883.0" width="37.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="922.4" y="894.0">org..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (5 samples, 3.18%)</title><rect x="919.4" y="867.0" width="37.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="922.4" y="878.0">jav..</text>
</g>
<g>
<title>java/util/AbstractSet.equals (5 samples, 3.18%)</title><rect x="919.4" y="851.0" width="37.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.4" y="862.0">jav..</text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (5 samples, 3.18%)</title><rect x="919.4" y="835.0" width="37.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="922.4" y="846.0">jav..</text>
</g>
<g>
<title>java/util/HashSet.contains (5 samples, 3.18%)</title><rect x="919.4" y="819.0" width="37.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.4" y="830.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.containsKey (5 samples, 3.18%)</title><rect x="919.4" y="803.0" width="37.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="922.4" y="814.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 1.91%)</title><rect x="919.4" y="787.0" width="22.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="922.4" y="798.0">j..</text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSnapshot.equals (3 samples, 1.91%)</title><rect x="919.4" y="771.0" width="22.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="922.4" y="782.0">o..</text>
</g>
<g>
<title>java/io/File.equals (3 samples, 1.91%)</title><rect x="919.4" y="755.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.4" y="766.0">j..</text>
</g>
<g>
<title>java/io/File.compareTo (3 samples, 1.91%)</title><rect x="919.4" y="739.0" width="22.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="922.4" y="750.0">j..</text>
</g>
<g>
<title>java/io/UnixFileSystem.compare (3 samples, 1.91%)</title><rect x="919.4" y="723.0" width="22.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="922.4" y="734.0">j..</text>
</g>
<g>
<title>java/lang/String.compareTo (3 samples, 1.91%)</title><rect x="919.4" y="707.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.4" y="718.0">j..</text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 1.27%)</title><rect x="942.0" y="787.0" width="15.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="945.0" y="798.0"></text>
</g>
<g>
<title>org/springframework/boot/devtools/filewatch/FileSnapshot.hashCode (2 samples, 1.27%)</title><rect x="942.0" y="771.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="945.0" y="782.0"></text>
</g>
<g>
<title>java/io/File.hashCode (1 samples, 0.64%)</title><rect x="949.5" y="755.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.5" y="766.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.hashCode (1 samples, 0.64%)</title><rect x="949.5" y="739.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.5" y="750.0"></text>
</g>
<g>
<title>org/apache/tomcat/util/net/NioBlockingSelector$BlockPoller.run (1 samples, 0.64%)</title><rect x="957.0" y="947.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.0" y="958.0"></text>
</g>
<g>
<title>thread_start (30 samples, 19.11%)</title><rect x="964.5" y="947.0" width="225.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="967.5" y="958.0">thread_start</text>
</g>
<g>
<title>_pthread_start (30 samples, 19.11%)</title><rect x="964.5" y="931.0" width="225.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="967.5" y="942.0">_pthread_start</text>
</g>
<g>
<title>java_start(Thread*) (30 samples, 19.11%)</title><rect x="964.5" y="915.0" width="225.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="967.5" y="926.0">java_start(Thread*)</text>
</g>
<g>
<title>GCTaskThread::run() (14 samples, 8.92%)</title><rect x="964.5" y="899.0" width="105.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="967.5" y="910.0">GCTaskThread:..</text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (4 samples, 2.55%)</title><rect x="964.5" y="883.0" width="30.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="967.5" y="894.0">Ol..</text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (4 samples, 2.55%)</title><rect x="964.5" y="867.0" width="30.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="967.5" y="878.0">Ca..</text>
</g>
<g>
<title>ObjectStartArray::object_start(HeapWord*) const (3 samples, 1.91%)</title><rect x="964.5" y="851.0" width="22.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="967.5" y="862.0">O..</text>
</g>
<g>
<title>oopDesc::size() (3 samples, 1.91%)</title><rect x="964.5" y="835.0" width="22.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="967.5" y="846.0">o..</text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (1 samples, 0.64%)</title><rect x="987.1" y="851.0" width="7.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="990.1" y="862.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (1 samples, 0.64%)</title><rect x="987.1" y="835.0" width="7.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="990.1" y="846.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (1 samples, 0.64%)</title><rect x="987.1" y="819.0" width="7.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="990.1" y="830.0"></text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.64%)</title><rect x="987.1" y="803.0" width="7.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="990.1" y="814.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.64%)</title><rect x="987.1" y="787.0" width="7.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="990.1" y="798.0"></text>
</g>
<g>
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.64%)</title><rect x="994.6" y="883.0" width="7.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="997.6" y="894.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.64%)</title><rect x="994.6" y="867.0" width="7.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="997.6" y="878.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (1 samples, 0.64%)</title><rect x="994.6" y="851.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="997.6" y="862.0"></text>
</g>
<g>
<title>PSScavengeKlassClosure::do_klass(Klass*) (1 samples, 0.64%)</title><rect x="994.6" y="835.0" width="7.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="997.6" y="846.0"></text>
</g>
<g>
<title>StealTask::do_it(GCTaskManager*, unsigned int) (7 samples, 4.46%)</title><rect x="1002.1" y="883.0" width="52.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1005.1" y="894.0">Steal..</text>
</g>
<g>
<title>SpinPause (7 samples, 4.46%)</title><rect x="1002.1" y="867.0" width="52.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1005.1" y="878.0">SpinP..</text>
</g>
<g>
<title>ThreadRootsTask::do_it(GCTaskManager*, unsigned int) (2 samples, 1.27%)</title><rect x="1054.7" y="883.0" width="15.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1057.7" y="894.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (2 samples, 1.27%)</title><rect x="1054.7" y="867.0" width="15.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.7" y="878.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (2 samples, 1.27%)</title><rect x="1054.7" y="851.0" width="15.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1057.7" y="862.0"></text>
</g>
<g>
<title>ConstantPool::impl_signature_ref_at(int, bool) (1 samples, 0.64%)</title><rect x="1054.7" y="835.0" width="7.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1057.7" y="846.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (1 samples, 0.64%)</title><rect x="1062.2" y="835.0" width="7.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1065.2" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::mask_for(methodHandle, int, InterpreterOopMap*) (1 samples, 0.64%)</title><rect x="1062.2" y="819.0" width="7.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1065.2" y="830.0"></text>
</g>
<g>
<title>OopMapCache::lookup(methodHandle, int, InterpreterOopMap*) const (1 samples, 0.64%)</title><rect x="1062.2" y="803.0" width="7.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1065.2" y="814.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 1.91%)</title><rect x="1069.7" y="899.0" width="22.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1072.7" y="910.0">V..</text>
</g>
<g>
<title>VMThread::loop() (3 samples, 1.91%)</title><rect x="1069.7" y="883.0" width="22.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1072.7" y="894.0">V..</text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.64%)</title><rect x="1069.7" y="867.0" width="7.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1072.7" y="878.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.64%)</title><rect x="1069.7" y="851.0" width="7.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1072.7" y="862.0"></text>
</g>
<g>
<title>Threads::nmethods_do(CodeBlobClosure*) (1 samples, 0.64%)</title><rect x="1069.7" y="835.0" width="7.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1072.7" y="846.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.64%)</title><rect x="1069.7" y="819.0" width="7.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1072.7" y="830.0"></text>
</g>
<g>
<title>StackFrameStream::next() (1 samples, 0.64%)</title><rect x="1069.7" y="803.0" width="7.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1072.7" y="814.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.64%)</title><rect x="1069.7" y="787.0" width="7.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1072.7" y="798.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.64%)</title><rect x="1069.7" y="771.0" width="7.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1072.7" y="782.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (2 samples, 1.27%)</title><rect x="1077.3" y="867.0" width="15.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1080.3" y="878.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 1.27%)</title><rect x="1077.3" y="851.0" width="15.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1080.3" y="862.0"></text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (2 samples, 1.27%)</title><rect x="1077.3" y="835.0" width="15.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1080.3" y="846.0"></text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (2 samples, 1.27%)</title><rect x="1077.3" y="819.0" width="15.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1080.3" y="830.0"></text>
</g>
<g>
<title>PSScavenge::invoke() (2 samples, 1.27%)</title><rect x="1077.3" y="803.0" width="15.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1080.3" y="814.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (2 samples, 1.27%)</title><rect x="1077.3" y="787.0" width="15.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1080.3" y="798.0"></text>
</g>
<g>
<title>PSYoungGen::resize(unsigned long, unsigned long) (1 samples, 0.64%)</title><rect x="1077.3" y="771.0" width="7.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1080.3" y="782.0"></text>
</g>
<g>
<title>PSYoungGen::resize_generation(unsigned long, unsigned long) (1 samples, 0.64%)</title><rect x="1077.3" y="755.0" width="7.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1080.3" y="766.0"></text>
</g>
<g>
<title>PSVirtualSpace::shrink_by(unsigned long) (1 samples, 0.64%)</title><rect x="1077.3" y="739.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1080.3" y="750.0"></text>
</g>
<g>
<title>os::uncommit_memory(char*, unsigned long) (1 samples, 0.64%)</title><rect x="1077.3" y="723.0" width="7.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.3" y="734.0"></text>
</g>
<g>
<title>os::pd_uncommit_memory(char*, unsigned long) (1 samples, 0.64%)</title><rect x="1077.3" y="707.0" width="7.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1080.3" y="718.0"></text>
</g>
<g>
<title>auth_errlist (1 samples, 0.64%)</title><rect x="1077.3" y="691.0" width="7.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1080.3" y="702.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, GCTimer*, GCId) (1 samples, 0.64%)</title><rect x="1084.8" y="771.0" width="7.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1087.8" y="782.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.64%)</title><rect x="1084.8" y="755.0" width="7.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1087.8" y="766.0"></text>
</g>
<g>
<title>JvmtiTagMap::do_weak_oops(BoolObjectClosure*, OopClosure*) (1 samples, 0.64%)</title><rect x="1084.8" y="739.0" width="7.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1087.8" y="750.0"></text>
</g>
<g>
<title>WatcherThread::run() (13 samples, 8.28%)</title><rect x="1092.3" y="899.0" width="97.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1095.3" y="910.0">WatcherThre..</text>
</g>
<g>
<title>WatcherThread::sleep() const (13 samples, 8.28%)</title><rect x="1092.3" y="883.0" width="97.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1095.3" y="894.0">WatcherThre..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (13 samples, 8.28%)</title><rect x="1092.3" y="867.0" width="97.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1095.3" y="878.0">Monitor::wa..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (13 samples, 8.28%)</title><rect x="1092.3" y="851.0" width="97.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1095.3" y="862.0">Monitor::IW..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (12 samples, 7.64%)</title><rect x="1099.8" y="835.0" width="90.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1102.8" y="846.0">os::Platfo..</text>
</g>
<g>
<title>__psynch_cvwait (12 samples, 7.64%)</title><rect x="1099.8" y="819.0" width="90.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1102.8" y="830.0">__psynch_c..</text>
</g>
</g>
</svg>
